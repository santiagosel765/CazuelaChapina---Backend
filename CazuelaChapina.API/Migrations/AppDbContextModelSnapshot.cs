// <auto-generated />
using System;
using CazuelaChapina.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CazuelaChapina.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CazuelaChapina.API.Models.Beverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("SweetenerId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.HasIndex("SweetenerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BeverageId")
                        .HasColumnType("integer");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("BeverageIngredients");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BeverageSizes");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageTopping", b =>
                {
                    b.Property<int>("BeverageId")
                        .HasColumnType("integer");

                    b.Property<int>("ToppingId")
                        .HasColumnType("integer");

                    b.HasKey("BeverageId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("BeverageToppings");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BeverageTypes");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Season")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItemBeverage", b =>
                {
                    b.Property<int>("ComboId")
                        .HasColumnType("integer");

                    b.Property<int>("BeverageId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ComboId", "BeverageId");

                    b.HasIndex("BeverageId");

                    b.ToTable("ComboItemBeverages");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItemTamale", b =>
                {
                    b.Property<int>("ComboId")
                        .HasColumnType("integer");

                    b.Property<int>("TamaleId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ComboId", "TamaleId");

                    b.HasIndex("TamaleId");

                    b.ToTable("ComboItemTamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Filling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fillings");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("integer");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("InventoryEntries");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCritical")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Stock")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tamales"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Combos"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inventory"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dashboard"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Users"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanCreate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanView")
                        .HasColumnType("boolean");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("RoleId", "ModuleId")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            IsActive = true,
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.SaleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BeverageId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SaleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("TamaleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("SaleId");

                    b.HasIndex("TamaleId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.SpiceLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SpiceLevels");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sweetener", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sweeteners");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Tamale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FillingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("SpiceLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("TamaleTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("WrapperId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FillingId");

                    b.HasIndex("SpiceLevelId");

                    b.HasIndex("TamaleTypeId");

                    b.HasIndex("WrapperId");

                    b.ToTable("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamaleIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("TamaleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("TamaleId");

                    b.ToTable("TamaleIngredients");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamaleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TamaleTypes");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Shift")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Wrapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Wrappers");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Beverage", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.BeverageSize", "Size")
                        .WithMany("Beverages")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Sweetener", "Sweetener")
                        .WithMany("Beverages")
                        .HasForeignKey("SweetenerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.BeverageType", "Type")
                        .WithMany("Beverages")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("Sweetener");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageIngredient", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageTopping", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Beverage", "Beverage")
                        .WithMany("BeverageToppings")
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Topping", "Topping")
                        .WithMany("BeverageToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItemBeverage", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Beverage", "Beverage")
                        .WithMany("ComboItems")
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Combo", "Combo")
                        .WithMany("Beverages")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItemTamale", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Combo", "Combo")
                        .WithMany("Tamales")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Tamale", "Tamale")
                        .WithMany("ComboItems")
                        .HasForeignKey("TamaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Tamale");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Device", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventoryEntry", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.InventoryItem", "Item")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Permission", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Module", "Module")
                        .WithMany("Permissions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sale", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Branch", "Branch")
                        .WithMany("Sales")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.SaleItem", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId");

                    b.HasOne("CazuelaChapina.API.Models.Sale", "Sale")
                        .WithMany("Items")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Tamale", "Tamale")
                        .WithMany()
                        .HasForeignKey("TamaleId");

                    b.Navigation("Beverage");

                    b.Navigation("Sale");

                    b.Navigation("Tamale");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Tamale", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Filling", "Filling")
                        .WithMany("Tamales")
                        .HasForeignKey("FillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.SpiceLevel", "SpiceLevel")
                        .WithMany("Tamales")
                        .HasForeignKey("SpiceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.TamaleType", "TamaleType")
                        .WithMany("Tamales")
                        .HasForeignKey("TamaleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Wrapper", "Wrapper")
                        .WithMany("Tamales")
                        .HasForeignKey("WrapperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filling");

                    b.Navigation("SpiceLevel");

                    b.Navigation("TamaleType");

                    b.Navigation("Wrapper");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamaleIngredient", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Tamale", "Tamale")
                        .WithMany()
                        .HasForeignKey("TamaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");

                    b.Navigation("Tamale");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.User", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId");

                    b.HasOne("CazuelaChapina.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.UserRole", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Beverage", b =>
                {
                    b.Navigation("BeverageToppings");

                    b.Navigation("ComboItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageSize", b =>
                {
                    b.Navigation("Beverages");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.BeverageType", b =>
                {
                    b.Navigation("Beverages");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Branch", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Combo", b =>
                {
                    b.Navigation("Beverages");

                    b.Navigation("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Filling", b =>
                {
                    b.Navigation("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Module", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sale", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.SpiceLevel", b =>
                {
                    b.Navigation("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sweetener", b =>
                {
                    b.Navigation("Beverages");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Tamale", b =>
                {
                    b.Navigation("ComboItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamaleType", b =>
                {
                    b.Navigation("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Topping", b =>
                {
                    b.Navigation("BeverageToppings");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Wrapper", b =>
                {
                    b.Navigation("Tamales");
                });
#pragma warning restore 612, 618
        }
    }
}
